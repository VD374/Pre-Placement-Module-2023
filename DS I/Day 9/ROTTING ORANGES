class Solution:
    def orangesRotting(self, grid)
        
        m, n = len(grid), len(grid[0])
        fresh = 0
        dirs = ((1, 0), (-1, 0), (0, -1), (0, 1))
        q = deque()
        for r in range(m):
            for c in range(n):
                if grid[r][c] == 1:
                    fresh += 1
                if grid[r][c] == 2:
                    q.append((r, c))
        
        res = 0
        while q and fresh > 0:
            curr_sz = len(q)
            for _ in range(curr_sz):
                r, c = q.popleft()

                for dr, dc in dirs:
                    new_r, new_c = r + dr, c + dc

                    if (0 <= new_r < m and 0 <= new_c < n 
                        and grid[new_r][new_c] == 1):
                        grid[new_r][new_c] = 2
                        q.append((new_r, new_c))
                        fresh -= 1
            res += 1
        return res if fresh == 0 else -1
